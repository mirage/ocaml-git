OASISFormat: 0.4
Name:        git
Version:     1.8.0
Synopsis:    A low-level interface to Git in pure OCaml
Authors:     Thomas Gazagnaire
License:     ISC
Plugins:     META (0.3), DevFiles (0.3)
BuildTools:  ocamlbuild

Flag unix
  Description:       build the Unix library
  Default:           true

Flag mirage
  Description:       build the Mirage library
  Default:           true

Library git
  Pack:              true
  Path:              lib/
  Findlibname:       git
  InternalModules:   LRU
  Modules:           Misc, Hash, Inflate, Object, Object_type,
                     Blob, Tree, Commit, Tag, Reference, Value,
                     Pack, Pack_index, Packed_value, Packed_refs, Index,
                     Sync, Gri, Search, Global_graph, User, Store,
                     Memory, FS, Version
  BuildDepends:      mstruct, logs, ocamlgraph, uri, lwt, hex, astring,
                     crc, fmt, decompress

Library git_top
  Path:             lib/top
  Findlibname:      top
  FindlibParent:    git
  Modules:          Git_top
  BuildDepends:     compiler-libs.toplevel
  XMETARequires:    git
  XMETADescription: Toplevel printers for Git values

Library "git-http"
  Build$:            flag(unix) || flag(mirage)
  Path:              lib/http/
  FindlibParent:     git
  Findlibname:       http
  Modules:           Git_http
  BuildDepends:      git, lwt, cohttp.lwt, uri.services

Library "git-unix"
  Build$:            flag(unix)
  Path:              lib/unix/
  FindlibParent:     git
  Findlibname:       unix
  Modules:           Git_unix
  BuildDepends:      git, git.http, lwt, cohttp.lwt, lwt.unix, conduit.lwt-unix,
                     zip, nocrypto

Library "git-mirage"
  Build$:            flag(mirage)
  Path:              lib/mirage/
  FindlibParent:     git
  Findlibname:       mirage
  Modules:           Git_mirage
  BuildDepends:      git, git.http, mirage-types.lwt, io-page, conduit.mirage,
                     dns.mirage, mirage-http, mirage-flow, channel

Executable ogit
  Build$:           flag(unix)
  Path:             bin/
  MainIs:           ogit.ml
  CompiledObject:   best
  Install:          true
  BuildDepends:     git, git.unix,
                    cmdliner, fmt.cli, fmt.tty, logs.cli, logs.fmt, mtime.os

Executable test_git
  Build$:           flag(tests) && flag(unix) && flag(mirage)
  Path:             lib_test
  MainIs:           test.ml
  CompiledObject:   best
  Install:          false
  BuildDepends:     alcotest, git, git.unix, git.mirage,
                    io-page.unix, mirage-fs-unix, logs.fmt, fmt.tty, mtime.os

Test test_git
  Run$:             flag(tests) && flag(unix) && flag(mirage)
  Command:          $test_git -q
  WorkingDirectory: lib_test/

Document git
  Title:                Git docs
  Type:                 OCamlbuild (0.4)
  BuildTools+:          ocamldoc
  Install:              true
  XOCamlbuildPath:      lib
  XOCamlbuildLibraries: git, git.unix, git.mirage
